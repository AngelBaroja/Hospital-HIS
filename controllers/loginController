const Usuario = require('../models/Usuario');
const Empleado = require('../models/Empleado');
const bcrypt = require('bcrypt');

async function validarUsuario(req, res) {
  try {
    const { usuario: usuarioInput } = req.body;

    // Busca el usuario y su empleado
   const usuario = await Usuario.findOne({
      where: { usuario: usuarioInput },
      include: [Empleado]
    });

    if (!usuario) {
      // Usuario no existe
      return res.status(401).render('login', { error: 'Usuario no encontrado' });
    }

    // Validar contrase単a
    const passwordValida = await bcrypt.compare(req.body.password, usuario.contrase単a);
    if (!passwordValida) {
      //Contrase単a Incorrecta
      return res.status(401).render('login', { error: 'Contrase単a incorrecta' });
    }
    let nombreCompleto=`${usuario.Empleado.nombre} ${usuario.Empleado.apellido}`;

    req.session.nombreUsuario = nombreCompleto;
    res.status(200).render('home', { usuario: nombreCompleto });
  } catch (error) {
    console.error('Error al validarUsuario:', error);
    res.status(500).render('error', {
      mensaje: 'Error al validar el Usuario de login',
      error
    });
  }
}

async function formularioLogin(req, res) { 
  try{    
   res.render('login');
  }catch (error) {
    console.error('Error al validarUsuario:', error);
    res.status(500).render('error', {
      mensaje: 'Error al cargar el formulario de login',
      error
    });
  }
}

module.exports = {
  validarUsuario,
  formularioLogin 
};